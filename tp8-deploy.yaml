apiVersion: v1
kind: ConfigMap
metadata:
  name: mi-configmap
data:
  appsettings.json: |-
    {
      "Status": "Enabled",
      //"Status": "Disabled",
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft.AspNetCore": "Warning"
        }
      },
      "AllowedHosts": "*"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mi-aplicacion
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mi-aplicacion
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate      
  template:
    metadata:
      labels:
        app: mi-aplicacion
    spec:
      containers:
      - name: mi-contenedor
        image: ballesterosd/tp6:d6d1e8ed
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: config-volume
          mountPath: /app/secrets
        - name: appsettings-sealedsecret
          mountPath: /app/secrets/appsettings.json
      volumes:
      - name: config-volume
        configMap:
          name: mi-configmap
      - name: appsettings-sealedsecret
        sealedSecret:
          name: mi-appsettings-sealedsecret          
      imagePullSecrets:
      - name: dockerhub-secret          
---
apiVersion: v1
kind: Service
metadata:
  name: mi-aplicacion-service
spec:
  selector:
    app: mi-aplicacion
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: mi-aplicacion-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mi-aplicacion
  minReplicas: 3
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

